[General]
# IPv6 支持
ipv6 = false
## skip-proxy和bypass-tun 一般不需要做改动,除非你自己知道自己在做什么
# 需要跳过代理的IP段及其域名,其中的域名和IP段将不会在通过规则匹配
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, passenger.t3go.cn,passenger.t3go.cn
# 设置不通过tun的域名和IP,同上所在内容将不会走规则匹配
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器
# Loon将并行查询所有dns,使用最快返回的IP进行网络访问和分流判断
# 配置DNS服务器IP,不推荐8.8.8.8和1.1.1.1等国外dns提供商,这些并不会提高国外访问稳定性,并且会导致国内域名的dns查询变慢
# 需要使用WIFI和运营商分配的dns可以添加[system],例如dns-server=system,119.29.29.29
# system和公共IP必须二选一填写
dns-server = 119.29.29.29,223.5.5.5
# 允许UDP代理
# 实际需要节点支持,和在节点中开启UDP
allow-udp-proxy = true
# 局域网共享
# 为局域网设备共享HTTP和SOCKS代理
allow-wifi-access = false
wifi-access-http-port = 7890
wifi-access-socket5-port = 7891
# 代理测速 URL
# 用于节点的可用性检测
proxy-test-url = http://www.gstatic.com/generate_204
# 检测超时时间
test-timeout = 5
# 返回真实IP
# 对一下域名不再返回FakeIP 一般不需要添加和修改
real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net
# 解析器
# 用于订阅 规则 复写等的解析
# 必须在配置中填写解析器URL,否则在UI不会出现解析器选项
# 现在Loon解析器功能暂时功能较弱,非必要条件下无需使用
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# 运行模式SSID
# 用于在不同网络环境下切换Loon的运行模式,全局直连(direct)、自动分流(rule)和全局代理(proxy)
# 通过ssid(WIFI名)进行判断
# ssid-trigger参数,用于指定SSID下流量模式切换,（default表示默认,cellular表示蜂窝,目前支持三种值：,, 
# 以下表示蜂窝数据(cellular)使用自动分流模式(rule),当链接WIFI名为ASUS的WIFI时使用直连模式(direct)
# 链接WIFI名为TPLINK的WIFI时使用自动分流模式(rule),其他情况(default)使用全局代理模式(proxy)

# ssid-trigger="proxy":rule,"cellular":rule,"ASUS":direct,"TPLINK":rule

# 本地节点
[Proxy]
# 用于书写自己的节点,节点格式参考https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Nodes/ExampleNodes.list
# 可以直接从Loon的节点列表中通过信息,复制出对应节点的Loon格式

# 机场订阅
# Loon订阅支持ss,ssr,trojan,vmess(v2ray)的原始订阅格式,可不使用转换器直接订阅
# 也可以使用Loon格式的专属订阅,节点格式参考[本地节点]
[Remote Proxy]
机场订阅 = https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Nodes/ExampleNodes.list

# 节点过滤,为策略组过滤是需要的节点,比如过滤订阅的所有的新加坡节点、香港节点、美国节点等
[Remote Filter]
机场节点 = NameRegex,机场订阅, FilterKey = "(.*)"
[Proxy Group]
# img-url为策略组图标,可选项
Global = select,direct,机场节点,img-url = https://github.com/Koolson/Qure/raw/master/IconSet/Color/Global.png

## 规则,用于自动分流 
# 本地规则
# 通常优先于订阅规则
# 规则优先级,从上往下依次匹配
# 格式: 类型,域名或IP,策略组
# 具体可参考https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list
[Rule]
DOMAIN,qq.com,DIRECT
DOMAIN-SUFFIX,baidu.com,DIRECT

# 以下两个规则将在最后匹配,优先级最低
# 若之前规则没匹配上,则通过查geoip数据库,如果请求是CN(中国)则走直连
GEOIP,CN,DIRECT
# 最后匹配的规则,之前没有匹配上的规则的请求将会触发这条规则
# 将走Global策略组所选节点
FINAL,Global

# 远程规则订阅
# 优先级从上往下
# 优先于GEOIP和FINAL本地规则
[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list,policy=direct,tag=国内域名
# 使用Global策略组,匹配上国外域名规则的请求将会走Global所选节点
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy_Domain.list,policy=Global,tag=国外域名


# 本地脚本
[Script]
enable = false
# 远程脚本订阅
[Remote Script]
# 复写,需要配合MITM才能,否则无法针对HTTPS网站
# 主要用于重定向和广告的精准屏蔽(reject)
[URL Rewrite]
enable = false
^https?:\/\/(www.)?(g|google)\.com\.hk https://www.google.com 302
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

# Loon插件
[Plugin]
# 需要配置并开启MITM后才能使用
https://raw.subloon.cf/AccelerateRaw.plugin, tag=Github加速, enabled=false

# 为域名指定解析的DNS服务器或者直接为域名指定IP
[Host]

[MITM]
enable = false
# 跳过证书验证,一般不推荐开启
skip-server-cert-verify = false
# 如果需要Loon对HTTPS网站进行解密需添加所要解密的域名,将解密添加域名的所有请求
hostname=